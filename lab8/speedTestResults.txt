BucketsSpeedTest
 This program inserts random Strings of length L
 Into different types of maps as <String, Integer> pairs.

What would you like L to be?: y
Please enter a positive integer: 5

Enter # strings to insert into each map: 10000000
class hashmap.MyHashMapALBuckets: 7.48 sec
class hashmap.MyHashMapLLBuckets: 8.24 sec
class hashmap.MyHashMapTSBuckets: 28.51 sec
class hashmap.MyHashMapHSBuckets: 53.40 sec
class hashmap.MyHashMapPQBuckets: 15.86 sec

=====================================================

InsertInOrderSpeedText
Enter # strings to insert into hashmap.ULLMap: 10000000
--Stack Overflow -- couldn't add 10000000 strings.

Enter # strings to insert into hashmap.MyHashMap: 10000000
class hashmap.MyHashMap: 3.07 sec

Enter # strings to insert into Java's HashMap: 10000000
Java's Built-in HashMap: 1.91 sec

/////////////////////

Enter # strings to insert into hashmap.ULLMap: 10000
class hashmap.ULLMap: 0.36 sec

Enter # strings to insert into hashmap.MyHashMap: 10000
class hashmap.MyHashMap: 0.02 sec

Enter # strings to insert into Java's HashMap: 10000
Java's Built-in HashMap: 0.00 sec

=================================================

InsertRandomSpeedTest
 This program inserts random Strings of length L
 Into different types of maps as <String, Integer> pairs.

What would you like L to be?: 5

Enter # strings to insert into hashmap.ULLMap: 30000
class hashmap.ULLMap: 1.71 sec

Enter # strings to insert into your hashmap.MyHashMap: 30000
class hashmap.MyHashMap: 0.02 sec

Enter # strings to insert into Java's HashMap: 30000
Java's Built-in HashMap: 0.01 sec

///////////////////////////

Enter # strings to insert into hashmap.ULLMap: 10000000
--Stack Overflow -- couldn't add 10000000 strings of length 5.

Enter # strings to insert into your hashmap.MyHashMap: 10000000
class hashmap.MyHashMap: 7.89 sec

Enter # strings to insert into Java's HashMap: 10000000
Java's Built-in HashMap: 3.94 sec

=========================================
idea:
Maybe using binary search, or in TreeSet, using LLRB instead of BST.